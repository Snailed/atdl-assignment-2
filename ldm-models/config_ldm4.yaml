model:
  base_learning_rate: 5.0e-05
  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    linear_start: 0.0015
    linear_end: 0.0155
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000  # Reduced from 1000 for faster training
    loss_type: l1
    first_stage_key: image
    cond_stage_key: image
    image_size: 64
    channels: 3 #
    cond_stage_trainable: false
    concat_mode: false
    scale_by_std: true
    monitor: val/loss_simple_ema
    scheduler_config:
      target: ldm.lr_scheduler.LambdaLinearScheduler
      params:
        warm_up_steps:
        - 10000
        cycle_lengths:
        - 10000000000000
        f_start:
        - 1.0e-06
        f_max:
        - 1.0
        f_min:
        - 1.0
    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 64
        in_channels: 3 #
        out_channels: 3 #
        model_channels: 128  # Reduced from 192
        attention_resolutions: []
        num_res_blocks: 1  # Reduced from 2
        channel_mult:
        - 1
        - 2
        - 4
        num_heads: 4  # Reduced from 8
        use_scale_shift_norm: true
        resblock_updown: true
    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      ckpt_path: "models/first_stage_models/kl-f4/model.ckpt"
      params:
        embed_dim: 3
        monitor: val/rec_loss
        ddconfig:
          double_z: true
          z_channels: 3
          resolution: 256
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity

    cond_stage_config: '__is_unconditional__'

data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 16
    num_workers: 5
    wrap: false
    train:
      target: ldm.data.lsun.LSUNChurchesTrain
      params:
        size: 256
    validation:
      target: ldm.data.lsun.LSUNChurchesValidation
      params:
        size: 256

lightning:
  #callbacks:
  #  image_logger:
  #    target: main.ImageLogger
  #    params:
  #      batch_frequency: 1000
  #      max_images: 8
  #      increase_log_steps: False
  trainer:
    benchmark: True
    accumulate_grad_batches: 4

  logger:
    target: pytorch_lightning.loggers.WandbLogger
    params:
      save_dir: "logs"
      project: "latent_diffusion_replication"
      name: "kl-f4"
      log_model: False
